<?php

session_start();

if (empty($_SESSION['session_id'])) {
    session_regenerate_id();
    $_SESSION['session_id'] = session_id();
    header("Location: /dids/login.php?action=LogIn", TRUE, 301);
}


if (!isset($_SESSION["recording_login"]) || $_SESSION["recording_login"] != true) {
	$url_action = 'LogIn';
} else {
	
	$url_action = (empty($_REQUEST['action'])) ? 'HomePage' : $_REQUEST['action'];
	if ($_SESSION["recording_login"] == true && $url_action != 'LogOut') {
		 header("Location: /dids/index.php", TRUE, 301);
	}
}

if (isset($url_action)) {    
    if (is_callable($url_action)) {
        call_user_func($url_action);
    } else {
        print 'Function does not exist, request terminated';
    }
}

function HomePage() {    
    print '<h1>Homepage</h1>';
    print '<p><a href="?action=LogIn">LogIn</a></p>';
    print '<p><a href="?action=LogOut">LogOut</a></p>';
    print '<p><a href="?action=SecureContent">Secure Content</a></p>';
}

function LogIn($url='') {
    $session_id = $_SESSION['session_id'];
    while (!IsAuthenticated()) {
        header('WWW-Authenticate: Basic realm="Recording"'); 
        header('HTTP/1.1 401 Unauthorized');
        die('Authorization Required');
    }
    
    $_SESSION["recording_login"] = true;
    if (!empty($url)) {
        return TRUE;
    } else {
        header("Location: /dids/index.php", TRUE, 301);    
    }
}    

function LogOut() {
    session_destroy(); 
    session_unset($_SESSION['session_id']);
    session_unset($_SESSION['recording_login']);
    session_unset($_SESSION['TENANT_ID']);
    #header("Location: /call_recordings/login.php", TRUE, 301); 
    SecureContent();   
}

function SecureContent() {
    if (LogIn("SecureContent")) {
        print '<h1>Secure Content</h1>';
        print '<p>This is secure content</p>';
        print '<p><a href="login.php">Login</a></p>';
    } else {
        print '<h1>Not Authorized</h1>';
    }
}

function IsAuthenticated() {
    if (isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW'])) {
        $httpd_username = filter_var($_SERVER['PHP_AUTH_USER'], FILTER_SANITIZE_STRING, FILTER_FLAG_ENCODE_HIGH|FILTER_FLAG_ENCODE_LOW);
        $httpd_password = filter_var($_SERVER['PHP_AUTH_PW'], FILTER_SANITIZE_STRING, FILTER_FLAG_ENCODE_HIGH|FILTER_FLAG_ENCODE_LOW);
		return http_authenticate($_SERVER['PHP_AUTH_USER'],$_SERVER['PHP_AUTH_PW'],$pass_file='/etc/nginx/htpasswd_recordings',$crypt_type='PLAIN');

        /*if ($httpd_username == "test" && $httpd_password == "test") {
            return TRUE;
        } else {
            return FALSE;
        }*/
    }
    return FALSE;
}

/**
 * Authenticate a user against a password file generated by Apache's httpasswd
 * using PHP rather than Apache itself.
 *
 * @param string $user The submitted user name
 * @param string $pass The submitted password
 * @param string $pass_file='.htpasswd' The system path to the htpasswd file
 * @param string $crypt_type='DES' The crypt type used to create the htpasswd file
 * @return bool
 */
function http_authenticate($user,$pass,$pass_file='.htpasswd',$crypt_type='DES') {
	// the stuff below is just an example useage that restricts
	// user names and passwords to only alpha-numeric characters.
	

	// get the information from the htpasswd file
	if (file_exists($pass_file) && is_readable($pass_file)) {
	    // the password file exists, open it
	    if ($fp=fopen($pass_file,'r')) {
		while ($line=fgets($fp)) {
		    // for each line in the file remove line endings
		    $line=preg_replace('`[\r\n]$`','',$line);
		    list($fuser,$fpass,$tenantid)=explode(':',$line);
		    if ($fuser==$user) {
			// the submitted user name matches this line
			// in the file
			switch($crypt_type) {
			    case 'DES':
				// the salt is the first 2
				// characters for DES encryption
				
				// use the salt to encode the
				// submitted password
				$test_pw=crypt($pass, '');
				break;
			    case 'PLAIN':
				$test_pw=$pass;
				break;
			    case 'SHA':
			    case 'MD5':
			    default:
				// unsupported crypt type
				fclose($fp);
				return FALSE;
			}
			if ($test_pw == $fpass) {
			    // authentication success.
			    if ($tenantid) {
			    	$_SESSION['TENANT_ID'] = $tenantid;
			    }
			    fclose($fp);
			    return TRUE;
			} else {
			    return FALSE;
			}
		    }
		}
		fclose($fp);
	    } else {
		// could not open the password file
		return FALSE;
	    }
	} else {
	    return FALSE;
	}
}

?>
